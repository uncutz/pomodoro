{% extends "page.twig" %}
{% block title %}
    Pomodoro Session
{% endblock %}

{% block styles %}
    <link rel="stylesheet" href="/{{ filePath }}/SessionMain.css">
    <link rel="stylesheet" href="/{{ filePath }}/TimerMain.css">
{% endblock %}


{% block content %}
    <div class="timer__wrapper">
        <div class="timer__circle">
            <div class="timer__number" data-time-left="" data-interval-id="">
                <h1>00:00:00</h1>
            </div>
        </div>
        {% include "components/player.twig" %}
    </div>

    <div class="playlist">
        <div id="player"></div>
        <button class="button button-primary" onclick="player.playVideo()">Play</button>
    </div>
{% endblock %}

{% block scripts %}
    <script src="/{{ filePath }}/TimerMain.js"></script>
    <script>
        const Timer = new Module.Timer();
        Timer.initTimer({{ workingBlockLength }})
    </script>

    <script>

        const tag            = document.createElement('script');
        tag.src              = 'https://www.youtube.com/iframe_api';
        const firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        let player;

        function onYouTubeIframeAPIReady()
        {
            player = new YT.Player('player', {
                height:  '',
                width:   '',
                videoId: '9UMxZofMNbA'
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event)
        {
            console.log(event.target);
            event.target.playVideo();
        }


        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        let done = false;

        function onPlayerStateChange(event)
        {
            if (event.data === YT.PlayerState.PLAYING && !done) {
                setTimeout(stopVideo, 6000);
                done = true;
            }
        }

        function stopVideo()
        {
            player.stopVideo();
        }
    </script>
{% endblock %}